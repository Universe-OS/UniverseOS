include GENERIC

cpu     HAMMER
ident   UniverseOS

#makeoptions	DEBUG=-g
#makeoptions	WITH_CTF=1

makeoptions	NO_MODULES=1

#makeoptions MODULES_OVERRIDE=""

# NODEBUG

device		acpi
#options 	ACPI_DEBUG

# MAXCPU defines the maximum number of CPUs that can boot in the system.
# A default value should be already present, for every architecture.
options 	MAXCPU=32
options 	NUMA

# CPU control pseudo-device. Provides access to MSRs, CPUID info and
# microcode update feature.
device		cpuctl
device		superio             # SuperIO driver.

#options 	SCHED_4BSD
options 	SCHED_ULE
options 	SCHED_STATS

options 	SMP			        # Symmetric MultiProcessor Kernel
# SMP Debugging Options:
#
# CALLOUT_PROFILING enables rudimentary profiling of the callwheel data
#	  structure used as backend in callout(9).
# PREEMPTION allows the threads that are in the kernel to be preempted by
#	  higher priority [interrupt] threads.  It helps with interactivity
#	  and allows interrupt threads to run sooner rather than waiting.
# FULL_PREEMPTION instructs the kernel to preempt non-realtime kernel
#	  threads.  Its sole use is to expose race conditions and other
#	  bugs during development.  Enabling this option will reduce
#	  performance and increase the frequency of kernel panics by
#	  design.  If you aren't sure that you need it then you don't.
#	  Relies on the PREEMPTION option.  DON'T TURN THIS ON.
# SLEEPQUEUE_PROFILING enables rudimentary profiling of the hash table
#	  used to hold active sleep queues as well as sleep wait message
#	  frequency.
# TURNSTILE_PROFILING enables rudimentary profiling of the hash table
#	  used to hold active lock queues.
# UMTX_PROFILING enables rudimentary profiling of the hash table used
#	  to hold active lock queues.
# WITNESS enables the witness code which detects deadlocks and cycles
#         during locking operations.
# WITNESS_KDB causes the witness code to drop into the kernel debugger if
#	  a lock hierarchy violation occurs or if locks are held when going to
#	  sleep.
# WITNESS_SKIPSPIN disables the witness checks on spin mutexes.
options 	PREEMPTION
options 	FULL_PREEMPTION
options 	WITNESS
options 	WITNESS_KDB
options 	WITNESS_SKIPSPIN

# Profiling for the callout(9) backend.
options 	CALLOUT_PROFILING

# Profiling for internal hash tables.
options 	SLEEPQUEUE_PROFILING
options 	TURNSTILE_PROFILING
options 	UMTX_PROFILING

# These three options provide support for System V Interface
# Definition-style interprocess communication, in the form of shared
# memory, semaphores, and message queues, respectively.
options 	SYSVSHM
options 	SYSVSEM
options 	SYSVMSG

# KTRACE enables the system-call tracing facility ktrace(2).  To be more
# SMP-friendly, KTRACE uses a worker thread to process most trace events
# asynchronously to the thread generating the event.  This requires a
# pre-allocated store of objects representing trace events.  The
# KTRACE_REQUEST_POOL option specifies the initial size of this store.
# The size of the pool can be adjusted both at boottime and runtime via
# the kern.ktrace_request_pool tunable and sysctl.
options 	KTRACE			#kernel tracing
options 	KTRACE_REQUEST_POOL=101

# Provide read/write access to the memory in the clock chip.
device		nvram		        # Access to rtc cmos via /dev/nvram

device		speaker             #Play IBM BASIC-style noises out your speaker
envvar		hint.speaker.0.at="isa"
envvar		hint.speaker.0.port="0x61"

# Number of initial kernel page table pages used for early bootstrap.
# This number should include enough pages to map the kernel and any
# modules or other data loaded with the kernel by the loader.  Each
# page table page maps 2MB.
options 	NKPT=31
options 	EFIRT               # EFI Runtime Services support

# HID-over-I2C support
device		iichid		# HID-over-I2C support
options 	IICHID_DEBUG	# Enable HID-over-I2C debug messages
options 	IICHID_SAMPLING	# Workaround missing GPIO INTR support

# HARDWARE BUS CONFIGURATION
# PCI bus & PCI options:
device		pci
options 	PCI_HP			# PCI-Express native HotPlug
options 	PCI_IOV			# PCI SR-IOV support

options 	VESA
options 	VESA_DEBUG
device		dpms		        # DPMS suspend & resume via VESA BIOS

# Video card driver for VGA adapters.
device		vga
envvar		hint.vga.0.at="isa"
# vt(4) drivers.
device		s3pci               # Linear framebuffer driver for S3 VESA 1.2 cards. Works on top of VESA.
device		vt_vga		        # VGA
device		vt_efifb	        # EFI framebuffer
device		vt_vbefb	        # VBE framebuffer

# Options for vga:
# Try the following option if the mouse pointer is not drawn correctly
# or font does not seem to be loaded properly.  May cause flicker on
# some systems.
options 	VGA_ALT_SEQACCESS   # Older video cards may require this option for proper operation.
options 	VGA_SLOW_IOACCESS	# do byte-wide i/o's to TS and GDC regs # Older video cards may require this option for proper operation.
options 	VGA_WIDTH90		    # support 90 column modes # The following option probably won't work with the LCD displays.

options     nvme

options 	GEOM_BDE		    # Disk encryption.
options 	GEOM_CACHE		    # Disk cache.
options 	GEOM_CONCAT		    # Disk concatenation.
options 	GEOM_ELI		    # Disk encryption.
options 	GEOM_GATE		    # Userland services.
options 	GEOM_JOURNAL		# Journaling.
options 	GEOM_LABEL		    # Providers labelization.
options 	GEOM_LINUX_LVM		# Linux LVM2 volumes
options 	GEOM_MAP		    # Map based partitioning
options 	GEOM_MIRROR		    # Disk mirroring.
options 	GEOM_MULTIPATH		# Disk multipath
options 	GEOM_NOP		    # Test class.
options 	GEOM_PART_BSD		# BSD disklabel
options 	GEOM_PART_BSD64		# BSD disklabel64
options 	GEOM_PART_EBR		# Extended Boot Records
options 	GEOM_PART_GPT		# GPT partitioning
options 	GEOM_PART_LDM		# Logical Disk Manager
options 	GEOM_PART_MBR		# MBR partitioning
options 	GEOM_PART_VTOC8		# SMI VTOC8 disk label
options 	GEOM_RAID		    # Soft RAID functionality.
options 	GEOM_RAID3		    # RAID3 functionality.
options 	GEOM_SHSEC		    # Shared secret.
options 	GEOM_STRIPE		    # Disk striping.
options 	GEOM_UZIP		    # Read-only compressed disks
options 	GEOM_VINUM		    # Vinum logical volume manager
options 	GEOM_VIRSTOR		# Virtual storage.
options 	GEOM_ZERO		    # Performance testing helper.

# Hardware watchdog timers:
device		ichwd               # ichwd: Intel ICH watchdog timer
device		amdsbwd             # amdsbwd: AMD SB7xx watchdog timer
device		viawd               # viawd: VIA south bridge watchdog timer
device		wbwd                # wbwd: Winbond watchdog timer
device		itwd                # itwd: ITE Super I/O watchdog timer

# System Management Bus (SMB)
options 	ENABLE_ALART		# Control alarm on Intel intpm driver

# AMD System Management Network (SMN)
device		amdsmn

options 	INET			    #Internet communications protocols
options 	INET6			    #IPv6 communications protocols

# Note if you include INET/INET6 or both options
# You *must* define at least one of the congestion control
# options or the compile will fail. GENERIC defines
# options CC_CUBIC. You may want to specify a default
# if multiple congestion controls are compiled in.
# The string in default is the name of the
# cc module as it would appear in the sysctl for
# setting the default. The code defines CUBIC
# as default, or the sole cc_module compiled in.
options 	CC_CDG
options 	CC_CHD
options 	CC_CUBIC
options 	CC_DCTCP
options 	CC_HD
options 	CC_HTCP
options 	CC_NEWRENO
options 	RATELIMIT		    # TX rate limiting support

options 	TCP_OFFLOAD		    # TCP offload support.
options  	TCP_RFC7413		    # TCP Fast Open

options  	TCPHPTS
makeoptions	WITH_EXTRA_TCP_STACKS=1	# RACK and BBR TCP kernel modules

options 	IPSEC			    #IP security (requires device crypto)
options 	IPSEC_SUPPORT
#options 	IPSEC_DEBUG		    #debug for IP security

device		enc # IPsec interface.

# TLS framing and encryption/decryption of data over TCP sockets.
options 	KERN_TLS		    # TLS transmit and receive offload

options 	LIBMCHAIN           # mchain library. It can be either loaded as KLD or compiled into kernel
options 	LIBALIAS            # libalias library, performing NAT

options 	SCTP
options 	SCTP_SUPPORT
#options 	SCTP_DEBUG

options 	SCTP_LOCK_LOGGING
options 	SCTP_MBUF_LOGGING
options 	SCTP_MBCNT_LOGGING
options 	SCTP_PACKET_LOGGING
options 	SCTP_LTRACE_CHUNKS
options 	SCTP_LTRACE_ERRORS

options 	NETGRAPH                    # netgraph(4) system
options 	NETGRAPH_DEBUG		        # enable extra debugging, this
					                    # affects netgraph(4) and nodes
# Node types
options 	NETGRAPH_ASYNC
options 	NETGRAPH_BLUETOOTH		    # ng_bluetooth(4)
options 	NETGRAPH_BLUETOOTH_HCI		# ng_hci(4)
options 	NETGRAPH_BLUETOOTH_L2CAP	# ng_l2cap(4)
options 	NETGRAPH_BLUETOOTH_SOCKET	# ng_btsocket(4)
options 	NETGRAPH_BLUETOOTH_UBT		# ng_ubt(4)
options 	NETGRAPH_BLUETOOTH_UBTBCMFW	# ubtbcmfw(4)
options 	NETGRAPH_BPF
options 	NETGRAPH_BRIDGE
options 	NETGRAPH_CAR
options 	NETGRAPH_CHECKSUM
options 	NETGRAPH_CISCO
options 	NETGRAPH_DEFLATE
options 	NETGRAPH_DEVICE
options 	NETGRAPH_ECHO
options 	NETGRAPH_EIFACE
options 	NETGRAPH_ETHER
options 	NETGRAPH_FRAME_RELAY
options 	NETGRAPH_GIF
options 	NETGRAPH_GIF_DEMUX
options 	NETGRAPH_HOLE
options 	NETGRAPH_IFACE
options 	NETGRAPH_IP_INPUT
options 	NETGRAPH_IPFW
options 	NETGRAPH_KSOCKET
options 	NETGRAPH_L2TP
options 	NETGRAPH_LMI
options 	NETGRAPH_MPPC_COMPRESSION
options 	NETGRAPH_MPPC_ENCRYPTION
options 	NETGRAPH_NETFLOW
options 	NETGRAPH_NAT
options 	NETGRAPH_ONE2MANY
options 	NETGRAPH_PATCH
options 	NETGRAPH_PIPE
options 	NETGRAPH_PPP
options 	NETGRAPH_PPPOE
options 	NETGRAPH_PPTPGRE
options 	NETGRAPH_PRED1
options 	NETGRAPH_RFC1490
options 	NETGRAPH_SOCKET
options 	NETGRAPH_SPLIT
options 	NETGRAPH_TAG
options 	NETGRAPH_TCPMSS
options 	NETGRAPH_TEE
options 	NETGRAPH_UI
options 	NETGRAPH_VJC
options 	NETGRAPH_VLAN

options 	VIMAGE
options 	VNET_DEBUG	# debug for VIMAGE

device		loop
device		ether
device		wlan
device		vlan
device		vxlan

options 	IEEE80211_SUPPORT_MESH	#enable 802.11s D3.0 support
options 	IEEE80211_SUPPORT_TDMA	#enable TDMA support

device		wlan_wep
device		wlan_ccmp
device		wlan_tkip
device		wlan_xauth
device		wlan_acl
device		wlan_amrr
device		bpf
device		netmap
device		disc
device		epair
device		edsc
device		tuntap
device		gif
device		gre
device		me
options 	XBONEHACK
device		stf

device		pf
device		pflog
device		pfsync

device		if_bridge # Bridge interface.

#
# Internet family options:
#
# MROUTING enables the kernel multicast packet forwarder, which works
# with mrouted and XORP.
#
# IPFIREWALL enables support for IP firewall construction, in
# conjunction with the `ipfw' program.  IPFIREWALL_VERBOSE sends
# logged packets to the system logger.  IPFIREWALL_VERBOSE_LIMIT
# limits the number of times a matching entry can be logged.
#
# WARNING:  IPFIREWALL defaults to a policy of "deny ip from any to any"
# and if you do not add other rules during startup to allow access,
# YOU WILL LOCK YOURSELF OUT.  It is suggested that you set firewall_type=open
# in /etc/rc.conf when first enabling this feature, then refining the
# firewall rules in /etc/rc.firewall after you've tested that the new kernel
# feature works properly.
#
# IPFIREWALL_DEFAULT_TO_ACCEPT causes the default rule (at boot) to
# allow everything.  Use with care, if a cracker can crash your
# firewall machine, they can get to your protected machines.  However,
# if you are using it as an as-needed filter for specific problems as
# they arise, then this may be for you.  Changing the default to 'allow'
# means that you won't get stuck if the kernel and /sbin/ipfw binary get
# out of sync.
#
# IPDIVERT enables the divert IP sockets, used by ``ipfw divert''.  It
# depends on IPFIREWALL if compiled into the kernel.
#
# IPFIREWALL_NAT adds support for in kernel nat in ipfw, and it requires
# LIBALIAS.
#
# IPFIREWALL_NAT64 adds support for in kernel NAT64 in ipfw.
#
# IPFIREWALL_NPTV6 adds support for in kernel NPTv6 in ipfw.
#
# IPFIREWALL_PMOD adds support for protocols modification module. Currently
# it supports only TCP MSS modification.
#
# IPSTEALTH enables code to support stealth forwarding (i.e., forwarding
# packets without touching the TTL).  This can be useful to hide firewalls
# from traceroute and similar tools.
#
# PF_DEFAULT_TO_DROP causes the default pf(4) rule to deny everything.
#
# TCPPCAP enables code which keeps the last n packets sent and received
# on a TCP socket.
#
# TCP_BLACKBOX enables enhanced TCP event logging.
#
# TCP_HHOOK enables the hhook(9) framework hooks for the TCP stack.
#
# ROUTE_MPATH provides support for multipath routing.
#
options 	MROUTING		                # Multicast routing
options 	IPFIREWALL		                #firewall
options 	IPFIREWALL_VERBOSE	            #enable logging to syslogd(8)
options 	IPFIREWALL_VERBOSE_LIMIT=100	#limit verbosity
options 	IPFIREWALL_DEFAULT_TO_ACCEPT	#allow everything by default
options 	IPFIREWALL_NAT		            #ipfw kernel nat support
options 	IPFIREWALL_NAT64	            #ipfw kernel NAT64 support
options 	IPFIREWALL_NPTV6	            #ipfw kernel IPv6 NPT support
options 	IPDIVERT		                #divert sockets
options 	IPFILTER		                #ipfilter support
options 	IPFILTER_LOG		            #ipfilter logging
options 	IPFILTER_LOOKUP		            #ipfilter pools
options 	IPFILTER_DEFAULT_BLOCK	        #block all packets by default
options 	IPSTEALTH		                #support for stealth forwarding
options 	PF_DEFAULT_TO_DROP	            #drop everything by default
options 	TCPPCAP
options 	TCP_BLACKBOX
options 	TCP_HHOOK
options 	ROUTE_MPATH

options 	ACCEPT_FILTER_DATA
options 	ACCEPT_FILTER_DNS
options 	ACCEPT_FILTER_HTTP

options 	AUTOFS			    #Automounter filesystem
options 	CD9660			    #ISO 9660 filesystem
options 	FDESCFS			    #File descriptor filesystem
options 	FUSEFS			    #FUSEFS support module
options 	MSDOSFS			    #MS DOS File System (FAT, FAT32)
nooptions 	NFSLOCKD		    #Network Lock Manager
nooptions 	NFSD			    #Network Filesystem Server
options 	KGSSAPI			    #Kernel GSSAPI implementation

options 	NULLFS			    #NULL filesystem
options 	PROCFS			    #Process filesystem (requires PSEUDOFS)
options 	PSEUDOFS		    #Pseudo-filesystem framework
nooptions 	PSEUDOFS_TRACE	    #Debugging support for PSEUDOFS
#options 	SMBFS			    #SMB/CIFS filesystem
options 	TMPFS			    #Efficient memory filesystem
options 	UDF			        #Universal Disk Format
options 	UNIONFS			    #Union filesystem

# Extended attributes allow additional data to be associated with files,
# and is used for ACLs, Capabilities, and MAC labels.
# See src/sys/ufs/ufs/README.extattr for more information.
options 	UFS_EXTATTR
options 	UFS_EXTATTR_AUTOSTART

# Directory hashing improves the speed of operations on very large
# directories at the expense of some memory.
options 	UFS_ACL             # Access Control List support for UFS filesystems.
options 	UFS_DIRHASH
options 	UFS_GJOURNAL        # Gjournal-based UFS journaling support.

# Soft updates is a technique for improving filesystem speed and
# making abrupt shutdown less risky.
options 	SOFTUPDATES

# Optional character code conversion support with LIBICONV.
# Each option requires their base file system and LIBICONV.
options 	CD9660_ICONV
options 	MSDOSFS_ICONV
options 	UDF_ICONV

# Support for Mandatory Access Control (MAC):
options 	MAC
options 	MAC_BIBA
options 	MAC_BSDEXTENDED
options 	MAC_IFOFF
options 	MAC_LOMAC
options 	MAC_MLS
options 	MAC_NONE
options 	MAC_NTPD
options 	MAC_PARTITION
options 	MAC_PORTACL
options 	MAC_PRIORITY
options 	MAC_SEEOTHERUIDS
options 	MAC_STUB
options 	MAC_TEST
options 	MAC_VERIEXEC
options 	MAC_VERIEXEC_SHA1
options 	MAC_VERIEXEC_SHA256
options 	MAC_VERIEXEC_SHA384
options 	MAC_VERIEXEC_SHA512
device		mac_veriexec_parser

device		scbus		    #base SCSI code
device		ch		        #SCSI media changers
device		da		        #SCSI direct access devices (aka disks)
device		sa		        #SCSI tapes
device		cd		        #SCSI CD-ROMs
device		ses		        #Enclosure Services (SES and SAF-TE)
device		pt		        #SCSI processor
device		targ		    #SCSI Target Mode Code
device		targbh		    #SCSI Target Mode Blackhole Device
device		pass		    #CAM passthrough driver
device		sg		        #Linux SCSI passthrough
device		ctl		        #CAM Target Layer

device		pty		        #BSD-style compatibility pseudo ttys
device		nmdm		    #back-to-back tty devices
device		md		        #Memory/malloc disk
device		snp		        #Snoop device - to look at pty/vty/etc..
device		ccd		        #Concatenated disk driver
device		firmware	    #firmware(9) support

options 	LIBICONV        # Kernel side iconv library


nooptions	INVARIANTS
nooptions	INVARIANT_SUPPORT
nooptions	WITNESS
#nooptions	WITNESS_SKIPSPIN
nooptions	DEBUG_VFS_LOCKS
nooptions	BUF_TRACKING
nooptions	FULL_BUF_TRACKING
nooptions	DEADLKRES
nooptions	COVERAGE
nooptions	KCOV
nooptions	MALLOC_DEBUG_MAXZONES
nooptions	QUEUE_MACRO_DEBUG_TRASH

# Net80211 debugging
nooptions	IEEE80211_DEBUG

# USB debugging
nooptions	USB_DEBUG
nooptions	HID_DEBUG

# CAM debugging
nooptions	CAMDEBUG
nooptions	CAM_DEBUG_FLAGS
# NODEBUG END

nooptions 	NFSCL
nooptions 	NFSLOCKD
nooptions 	NFS_ROOT
nooptions 	COMPAT_FREEBSD32
nooptions 	COMPAT_FREEBSD4
nooptions 	COMPAT_FREEBSD5
nooptions 	COMPAT_FREEBSD6
nooptions 	COMPAT_FREEBSD7

# Floppy drives
nodevice 	fdc

# RAID controllers interfaced to the SCSI subsystem
nodevice    amr         # AMI MegaRAID
nodevice    arcmsr      # Areca SATA II RAID
nodevice    ciss        # Compaq Smart RAID 5*
nodevice    iir         # Intel Integrated RAID
nodevice    ips         # IBM (Adaptec) ServeRAID
nodevice    mly         # Mylex AcceleRAID/eXtremeRAID
nodevice    twa         # 3ware 9000 series PATA/SATA RAID
nodevice    smartpqi    # Microsemi smartpqi driver
nodevice    tws	        # LSI 3ware 9750 SATA+SAS 6Gb/s RAID controller

# RAID controllers
nodevice    aac         # Adaptec FSA RAID
nodevice    aacp        # SCSI passthrough for aac (requires CAM)
nodevice    aacraid     # Adaptec by PMC RAID
nodevice    ida         # Compaq Smart RAID
nodevice    mfi         # LSI MegaRAID SAS
nodevice    mlx         # Mylex DAC960 family
nodevice    mrsas       # LSI/Avago MegaRAID SAS/SATA, 6Gb/s and 12Gb/s
nodevice    pmspcv      # PMC-Sierra SAS/SATA Controller driver
#XXX pointer/int warnings
nodevice    pst     # Promise Supertrak SX6000
nodevice    twe     # 3ware ATA RAID

# PCI Ethernet NICs that use the common MII bus controller code.
# NOTE: Be sure to keep the 'device miibus' line in order to use these NICs!
nodevice		sge
nodevice		sis
nodevice		sk      # SysKonnect SK-984x & SK-982x gigabit Ethernet
nodevice		ste     # Sundance ST201 (D-Link DFE-550TX)
nodevice		stge    # Sundance/Tamarack TC9021 gigabit Ethernet
nodevice		vge     # VIA VT612x gigabit Ethernet
nodevice		vr      # VIA Rhine, Rhine II
nodevice		xl      # 3Com 3c90x (``Boomerang'', ``Cyclone'')

nodevice 	pvscsi

# HyperV drivers and enhancement support
device 	hyperv

# Xen HVM Guest Optimizations
# NOTE: XENHVM depends on xenpci.  They must be added or removed together.
nooptions 	XENHVM
nodevice	xenpci
